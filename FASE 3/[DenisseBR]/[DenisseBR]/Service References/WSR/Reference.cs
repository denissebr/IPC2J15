//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _DenisseBR_.WSR {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSR.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logC(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logC", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logCAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logE(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logE", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logEAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logD(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logD", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logDAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logA(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logA", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logAAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string obtenerUs(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerUs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> obtenerUsAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string obtenerEmp(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> obtenerEmpAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tipoEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int tipoEmp(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tipoEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> tipoEmpAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDPI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long obtenerDPI(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDPI", ReplyAction="*")]
        System.Threading.Tasks.Task<long> obtenerDPIAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerDatosUs(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosUs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosUsAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/perfilIndividual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet perfilIndividual(int IdEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/perfilIndividual", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> perfilIndividualAsync(int IdEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarDatosPed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarDatosPed(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarDatosPed", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarDatosPedAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarDatosPedIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarDatosPedIn(int IdPa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarDatosPedIn", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarDatosPedInAsync(int IdPa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosPed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerDatosPed(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosPed", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosPedAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Categorias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Categorias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Categorias", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> CategoriasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Sucursal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> SucursalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ObtenerSucursal(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenerSucursalAsync(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursalEmpl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ObtenerSucursalEmpl(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursalEmpl", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenerSucursalEmplAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Obtenericcat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Obtenericcat(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Obtenericcat", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenericcatAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sucursalPedido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int sucursalPedido(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sucursalPedido", ReplyAction="*")]
        System.Threading.Tasks.Task<int> sucursalPedidoAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int obtenerDept(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDept", ReplyAction="*")]
        System.Threading.Tasks.Task<int> obtenerDeptAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nombredept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string nombredept(int rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nombredept", ReplyAction="*")]
        System.Threading.Tasks.Task<string> nombredeptAsync(int rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/direccionSucur", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string direccionSucur(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/direccionSucur", ReplyAction="*")]
        System.Threading.Tasks.Task<string> direccionSucurAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarPedido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarPedido();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarPedido", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarPedidoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerCasilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerCasilla(string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerCasilla", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerCasillaAsync(string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/devolverDPI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long devolverDPI(int cas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/devolverDPI", ReplyAction="*")]
        System.Threading.Tasks.Task<long> devolverDPIAsync(int cas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tablaDevolver", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet tablaDevolver(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tablaDevolver", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> tablaDevolverAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/clientePendienteApr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet clientePendienteApr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/clientePendienteApr", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> clientePendienteAprAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEstado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarEstado(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEstado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarEstadoAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rechazar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Rechazar(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rechazar", ReplyAction="*")]
        System.Threading.Tasks.Task<int> RechazarAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarPrecio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool actualizarPrecio(int idpa, float precio, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarPrecio", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> actualizarPrecioAsync(int idpa, float precio, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarDatos(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal, long tarjeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatos", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarDatosAsync(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal, long tarjeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cotizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string cotizar(float precio, float peso, float tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/cotizar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> cotizarAsync(float precio, float peso, float tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verificarUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool verificarUs(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verificarUs", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> verificarUsAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarUS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool registrarUS(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal, long tarjeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarUS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> registrarUSAsync(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal, long tarjeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PedidoPrecio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool PedidoPrecio(string nombre, string descripcion, float peso, float precio, long dpi, int idcat, int idest, float valor, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PedidoPrecio", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> PedidoPrecioAsync(string nombre, string descripcion, float peso, float precio, long dpi, int idcat, int idest, float valor, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PedidoPrecioF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool PedidoPrecioF(string nombre, string descripcion, float peso, string precio, long dpi, int idcat, int idest, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PedidoPrecioF", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> PedidoPrecioFAsync(string nombre, string descripcion, float peso, string precio, long dpi, int idcat, int idest, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/despedir", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int despedir(int codigoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/despedir", ReplyAction="*")]
        System.Threading.Tasks.Task<int> despedirAsync(int codigoEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarEmpleado(int sucursal, int departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarEmpleadoAsync(int sucursal, int departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarEquipo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarEquipo(int sucursal, int departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarEquipo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarEquipoAsync(int sucursal, int departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerDatosEmp(int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosEmpAsync(int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/departamentos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] departamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/departamentos", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> departamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatosEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarDatosEmp(string nom, string apellido, int telefono, float sueldo, string direccion, int rol, string usuario, string passw, int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatosEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarDatosEmpAsync(string nom, string apellido, int telefono, float sueldo, string direccion, int rol, string usuario, string passw, int cod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarPrecarga", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mostrarPrecarga();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/mostrarPrecarga", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> mostrarPrecargaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aprobarPrecio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool aprobarPrecio(int idpa, float precioAc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/aprobarPrecio", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> aprobarPrecioAsync(int idpa, float precioAc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/rechazarPrecio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool rechazarPrecio(int idpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/rechazarPrecio", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> rechazarPrecioAsync(int idpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosPrecio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDatosPrecio(int idpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosPrecio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosPrecioAsync(int idpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Obtenercat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        float Obtenercat(int idcat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Obtenercat", ReplyAction="*")]
        System.Threading.Tasks.Task<float> ObtenercatAsync(int idcat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/precioFinal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        float precioFinal(float peso, float impuesto, float precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/precioFinal", ReplyAction="*")]
        System.Threading.Tasks.Task<float> precioFinalAsync(float peso, float impuesto, float precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/crearRegistro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool crearRegistro(int categoria, int casilla, float peso, float precio, int lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/crearRegistro", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> crearRegistroAsync(int categoria, int casilla, float peso, float precio, int lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/crearHisPa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool crearHisPa(string fecha, int Idemp, int idPa, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/crearHisPa", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> crearHisPaAsync(string fecha, int Idemp, int idPa, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int IdEmp(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IdEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> IdEmpAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUltimoLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ObtenerUltimoLote();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUltimoLote", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenerUltimoLoteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerFechaUltimoLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime ObtenerFechaUltimoLote(int idlote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerFechaUltimoLote", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime> ObtenerFechaUltimoLoteAsync(int idlote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CrearLote(string fecha, int idsucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearLote", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CrearLoteAsync(string fecha, int idsucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/agregarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool agregarEmpleado(string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/agregarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> agregarEmpleadoAsync(string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUltimoHis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ObtenerUltimoHis(int emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUltimoHis", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenerUltimoHisAsync(int emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/agregarHisEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool agregarHisEmp(string fechain, int Idemplead, string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/agregarHisEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> agregarHisEmpAsync(string fechain, int Idemplead, string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarHisEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizarHisEmp(string fechain, int Idemplead, string nombre, string apellido, int telefono, float sueldo, string direccion, string tipo, int rol, string usuarioEmpleado, string PasswordE, int habilitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarHisEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizarHisEmpAsync(string fechain, int Idemplead, string nombre, string apellido, int telefono, float sueldo, string direccion, string tipo, int rol, string usuarioEmpleado, string PasswordE, int habilitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarHisEmpFn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizarHisEmpFn(string fechafn, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarHisEmpFn", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizarHisEmpFnAsync(string fechafn, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDeptId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int obtenerDeptId(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDeptId", ReplyAction="*")]
        System.Threading.Tasks.Task<int> obtenerDeptIdAsync(string nombre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : _DenisseBR_.WSR.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<_DenisseBR_.WSR.Service1Soap>, _DenisseBR_.WSR.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool logC(string user, string pass) {
            return base.Channel.logC(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logCAsync(string user, string pass) {
            return base.Channel.logCAsync(user, pass);
        }
        
        public bool logE(string user, string pass) {
            return base.Channel.logE(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logEAsync(string user, string pass) {
            return base.Channel.logEAsync(user, pass);
        }
        
        public bool logD(string user, string pass) {
            return base.Channel.logD(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logDAsync(string user, string pass) {
            return base.Channel.logDAsync(user, pass);
        }
        
        public bool logA(string user, string pass) {
            return base.Channel.logA(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logAAsync(string user, string pass) {
            return base.Channel.logAAsync(user, pass);
        }
        
        public string obtenerUs(string user) {
            return base.Channel.obtenerUs(user);
        }
        
        public System.Threading.Tasks.Task<string> obtenerUsAsync(string user) {
            return base.Channel.obtenerUsAsync(user);
        }
        
        public string obtenerEmp(string user) {
            return base.Channel.obtenerEmp(user);
        }
        
        public System.Threading.Tasks.Task<string> obtenerEmpAsync(string user) {
            return base.Channel.obtenerEmpAsync(user);
        }
        
        public int tipoEmp(string user) {
            return base.Channel.tipoEmp(user);
        }
        
        public System.Threading.Tasks.Task<int> tipoEmpAsync(string user) {
            return base.Channel.tipoEmpAsync(user);
        }
        
        public long obtenerDPI(string user) {
            return base.Channel.obtenerDPI(user);
        }
        
        public System.Threading.Tasks.Task<long> obtenerDPIAsync(string user) {
            return base.Channel.obtenerDPIAsync(user);
        }
        
        public System.Data.DataSet obtenerDatosUs(long dpi) {
            return base.Channel.obtenerDatosUs(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosUsAsync(long dpi) {
            return base.Channel.obtenerDatosUsAsync(dpi);
        }
        
        public System.Data.DataSet perfilIndividual(int IdEmp) {
            return base.Channel.perfilIndividual(IdEmp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> perfilIndividualAsync(int IdEmp) {
            return base.Channel.perfilIndividualAsync(IdEmp);
        }
        
        public System.Data.DataSet mostrarDatosPed(long dpi) {
            return base.Channel.mostrarDatosPed(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarDatosPedAsync(long dpi) {
            return base.Channel.mostrarDatosPedAsync(dpi);
        }
        
        public System.Data.DataSet mostrarDatosPedIn(int IdPa) {
            return base.Channel.mostrarDatosPedIn(IdPa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarDatosPedInAsync(int IdPa) {
            return base.Channel.mostrarDatosPedInAsync(IdPa);
        }
        
        public System.Data.DataSet obtenerDatosPed(long dpi) {
            return base.Channel.obtenerDatosPed(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosPedAsync(long dpi) {
            return base.Channel.obtenerDatosPedAsync(dpi);
        }
        
        public string[] Categorias() {
            return base.Channel.Categorias();
        }
        
        public System.Threading.Tasks.Task<string[]> CategoriasAsync() {
            return base.Channel.CategoriasAsync();
        }
        
        public string[] Sucursal() {
            return base.Channel.Sucursal();
        }
        
        public System.Threading.Tasks.Task<string[]> SucursalAsync() {
            return base.Channel.SucursalAsync();
        }
        
        public int ObtenerSucursal(string direccion) {
            return base.Channel.ObtenerSucursal(direccion);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerSucursalAsync(string direccion) {
            return base.Channel.ObtenerSucursalAsync(direccion);
        }
        
        public int ObtenerSucursalEmpl(string user) {
            return base.Channel.ObtenerSucursalEmpl(user);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerSucursalEmplAsync(string user) {
            return base.Channel.ObtenerSucursalEmplAsync(user);
        }
        
        public int Obtenericcat(string nombre) {
            return base.Channel.Obtenericcat(nombre);
        }
        
        public System.Threading.Tasks.Task<int> ObtenericcatAsync(string nombre) {
            return base.Channel.ObtenericcatAsync(nombre);
        }
        
        public int sucursalPedido(string usuario) {
            return base.Channel.sucursalPedido(usuario);
        }
        
        public System.Threading.Tasks.Task<int> sucursalPedidoAsync(string usuario) {
            return base.Channel.sucursalPedidoAsync(usuario);
        }
        
        public int obtenerDept(string usuario) {
            return base.Channel.obtenerDept(usuario);
        }
        
        public System.Threading.Tasks.Task<int> obtenerDeptAsync(string usuario) {
            return base.Channel.obtenerDeptAsync(usuario);
        }
        
        public string nombredept(int rol) {
            return base.Channel.nombredept(rol);
        }
        
        public System.Threading.Tasks.Task<string> nombredeptAsync(int rol) {
            return base.Channel.nombredeptAsync(rol);
        }
        
        public string direccionSucur(int id) {
            return base.Channel.direccionSucur(id);
        }
        
        public System.Threading.Tasks.Task<string> direccionSucurAsync(int id) {
            return base.Channel.direccionSucurAsync(id);
        }
        
        public System.Data.DataSet mostrarPedido() {
            return base.Channel.mostrarPedido();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarPedidoAsync() {
            return base.Channel.mostrarPedidoAsync();
        }
        
        public System.Data.DataSet obtenerCasilla(string Texto) {
            return base.Channel.obtenerCasilla(Texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerCasillaAsync(string Texto) {
            return base.Channel.obtenerCasillaAsync(Texto);
        }
        
        public long devolverDPI(int cas) {
            return base.Channel.devolverDPI(cas);
        }
        
        public System.Threading.Tasks.Task<long> devolverDPIAsync(int cas) {
            return base.Channel.devolverDPIAsync(cas);
        }
        
        public System.Data.DataSet tablaDevolver(long dpi) {
            return base.Channel.tablaDevolver(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> tablaDevolverAsync(long dpi) {
            return base.Channel.tablaDevolverAsync(dpi);
        }
        
        public System.Data.DataSet clientePendienteApr() {
            return base.Channel.clientePendienteApr();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> clientePendienteAprAsync() {
            return base.Channel.clientePendienteAprAsync();
        }
        
        public int ActualizarEstado(long dpi) {
            return base.Channel.ActualizarEstado(dpi);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarEstadoAsync(long dpi) {
            return base.Channel.ActualizarEstadoAsync(dpi);
        }
        
        public int Rechazar(long dpi) {
            return base.Channel.Rechazar(dpi);
        }
        
        public System.Threading.Tasks.Task<int> RechazarAsync(long dpi) {
            return base.Channel.RechazarAsync(dpi);
        }
        
        public bool actualizarPrecio(int idpa, float precio, int estado) {
            return base.Channel.actualizarPrecio(idpa, precio, estado);
        }
        
        public System.Threading.Tasks.Task<bool> actualizarPrecioAsync(int idpa, float precio, int estado) {
            return base.Channel.actualizarPrecioAsync(idpa, precio, estado);
        }
        
        public int ActualizarDatos(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal, long tarjeta) {
            return base.Channel.ActualizarDatos(nom, apellido, dpi, telefono, nit, direccion, usuario, passw, IdSucursal, tarjeta);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarDatosAsync(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal, long tarjeta) {
            return base.Channel.ActualizarDatosAsync(nom, apellido, dpi, telefono, nit, direccion, usuario, passw, IdSucursal, tarjeta);
        }
        
        public string cotizar(float precio, float peso, float tipo) {
            return base.Channel.cotizar(precio, peso, tipo);
        }
        
        public System.Threading.Tasks.Task<string> cotizarAsync(float precio, float peso, float tipo) {
            return base.Channel.cotizarAsync(precio, peso, tipo);
        }
        
        public bool verificarUs(string user) {
            return base.Channel.verificarUs(user);
        }
        
        public System.Threading.Tasks.Task<bool> verificarUsAsync(string user) {
            return base.Channel.verificarUsAsync(user);
        }
        
        public bool registrarUS(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal, long tarjeta) {
            return base.Channel.registrarUS(nombre, apellido, dpi, telefono, nit, direccion, estado, usuario, passw, IdSucursal, tarjeta);
        }
        
        public System.Threading.Tasks.Task<bool> registrarUSAsync(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal, long tarjeta) {
            return base.Channel.registrarUSAsync(nombre, apellido, dpi, telefono, nit, direccion, estado, usuario, passw, IdSucursal, tarjeta);
        }
        
        public bool PedidoPrecio(string nombre, string descripcion, float peso, float precio, long dpi, int idcat, int idest, float valor, int idsuc) {
            return base.Channel.PedidoPrecio(nombre, descripcion, peso, precio, dpi, idcat, idest, valor, idsuc);
        }
        
        public System.Threading.Tasks.Task<bool> PedidoPrecioAsync(string nombre, string descripcion, float peso, float precio, long dpi, int idcat, int idest, float valor, int idsuc) {
            return base.Channel.PedidoPrecioAsync(nombre, descripcion, peso, precio, dpi, idcat, idest, valor, idsuc);
        }
        
        public bool PedidoPrecioF(string nombre, string descripcion, float peso, string precio, long dpi, int idcat, int idest, int idsuc) {
            return base.Channel.PedidoPrecioF(nombre, descripcion, peso, precio, dpi, idcat, idest, idsuc);
        }
        
        public System.Threading.Tasks.Task<bool> PedidoPrecioFAsync(string nombre, string descripcion, float peso, string precio, long dpi, int idcat, int idest, int idsuc) {
            return base.Channel.PedidoPrecioFAsync(nombre, descripcion, peso, precio, dpi, idcat, idest, idsuc);
        }
        
        public int despedir(int codigoEmp) {
            return base.Channel.despedir(codigoEmp);
        }
        
        public System.Threading.Tasks.Task<int> despedirAsync(int codigoEmp) {
            return base.Channel.despedirAsync(codigoEmp);
        }
        
        public System.Data.DataSet mostrarEmpleado(int sucursal, int departamento) {
            return base.Channel.mostrarEmpleado(sucursal, departamento);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarEmpleadoAsync(int sucursal, int departamento) {
            return base.Channel.mostrarEmpleadoAsync(sucursal, departamento);
        }
        
        public System.Data.DataSet mostrarEquipo(int sucursal, int departamento) {
            return base.Channel.mostrarEquipo(sucursal, departamento);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarEquipoAsync(int sucursal, int departamento) {
            return base.Channel.mostrarEquipoAsync(sucursal, departamento);
        }
        
        public System.Data.DataSet obtenerDatosEmp(int cod) {
            return base.Channel.obtenerDatosEmp(cod);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosEmpAsync(int cod) {
            return base.Channel.obtenerDatosEmpAsync(cod);
        }
        
        public string[] departamentos() {
            return base.Channel.departamentos();
        }
        
        public System.Threading.Tasks.Task<string[]> departamentosAsync() {
            return base.Channel.departamentosAsync();
        }
        
        public int ActualizarDatosEmp(string nom, string apellido, int telefono, float sueldo, string direccion, int rol, string usuario, string passw, int cod) {
            return base.Channel.ActualizarDatosEmp(nom, apellido, telefono, sueldo, direccion, rol, usuario, passw, cod);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarDatosEmpAsync(string nom, string apellido, int telefono, float sueldo, string direccion, int rol, string usuario, string passw, int cod) {
            return base.Channel.ActualizarDatosEmpAsync(nom, apellido, telefono, sueldo, direccion, rol, usuario, passw, cod);
        }
        
        public System.Data.DataSet mostrarPrecarga() {
            return base.Channel.mostrarPrecarga();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mostrarPrecargaAsync() {
            return base.Channel.mostrarPrecargaAsync();
        }
        
        public bool aprobarPrecio(int idpa, float precioAc) {
            return base.Channel.aprobarPrecio(idpa, precioAc);
        }
        
        public System.Threading.Tasks.Task<bool> aprobarPrecioAsync(int idpa, float precioAc) {
            return base.Channel.aprobarPrecioAsync(idpa, precioAc);
        }
        
        public bool rechazarPrecio(int idpa) {
            return base.Channel.rechazarPrecio(idpa);
        }
        
        public System.Threading.Tasks.Task<bool> rechazarPrecioAsync(int idpa) {
            return base.Channel.rechazarPrecioAsync(idpa);
        }
        
        public System.Data.DataSet ObtenerDatosPrecio(int idpa) {
            return base.Channel.ObtenerDatosPrecio(idpa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosPrecioAsync(int idpa) {
            return base.Channel.ObtenerDatosPrecioAsync(idpa);
        }
        
        public float Obtenercat(int idcat) {
            return base.Channel.Obtenercat(idcat);
        }
        
        public System.Threading.Tasks.Task<float> ObtenercatAsync(int idcat) {
            return base.Channel.ObtenercatAsync(idcat);
        }
        
        public float precioFinal(float peso, float impuesto, float precio) {
            return base.Channel.precioFinal(peso, impuesto, precio);
        }
        
        public System.Threading.Tasks.Task<float> precioFinalAsync(float peso, float impuesto, float precio) {
            return base.Channel.precioFinalAsync(peso, impuesto, precio);
        }
        
        public bool crearRegistro(int categoria, int casilla, float peso, float precio, int lote) {
            return base.Channel.crearRegistro(categoria, casilla, peso, precio, lote);
        }
        
        public System.Threading.Tasks.Task<bool> crearRegistroAsync(int categoria, int casilla, float peso, float precio, int lote) {
            return base.Channel.crearRegistroAsync(categoria, casilla, peso, precio, lote);
        }
        
        public bool crearHisPa(string fecha, int Idemp, int idPa, int estado) {
            return base.Channel.crearHisPa(fecha, Idemp, idPa, estado);
        }
        
        public System.Threading.Tasks.Task<bool> crearHisPaAsync(string fecha, int Idemp, int idPa, int estado) {
            return base.Channel.crearHisPaAsync(fecha, Idemp, idPa, estado);
        }
        
        public int IdEmp(string user) {
            return base.Channel.IdEmp(user);
        }
        
        public System.Threading.Tasks.Task<int> IdEmpAsync(string user) {
            return base.Channel.IdEmpAsync(user);
        }
        
        public int ObtenerUltimoLote() {
            return base.Channel.ObtenerUltimoLote();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerUltimoLoteAsync() {
            return base.Channel.ObtenerUltimoLoteAsync();
        }
        
        public System.DateTime ObtenerFechaUltimoLote(int idlote) {
            return base.Channel.ObtenerFechaUltimoLote(idlote);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> ObtenerFechaUltimoLoteAsync(int idlote) {
            return base.Channel.ObtenerFechaUltimoLoteAsync(idlote);
        }
        
        public bool CrearLote(string fecha, int idsucursal) {
            return base.Channel.CrearLote(fecha, idsucursal);
        }
        
        public System.Threading.Tasks.Task<bool> CrearLoteAsync(string fecha, int idsucursal) {
            return base.Channel.CrearLoteAsync(fecha, idsucursal);
        }
        
        public bool agregarEmpleado(string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc) {
            return base.Channel.agregarEmpleado(nombre, apellido, sueldo, tipo, rol, habilitado, idsuc);
        }
        
        public System.Threading.Tasks.Task<bool> agregarEmpleadoAsync(string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc) {
            return base.Channel.agregarEmpleadoAsync(nombre, apellido, sueldo, tipo, rol, habilitado, idsuc);
        }
        
        public int ObtenerUltimoHis(int emp) {
            return base.Channel.ObtenerUltimoHis(emp);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerUltimoHisAsync(int emp) {
            return base.Channel.ObtenerUltimoHisAsync(emp);
        }
        
        public bool agregarHisEmp(string fechain, int Idemplead, string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc) {
            return base.Channel.agregarHisEmp(fechain, Idemplead, nombre, apellido, sueldo, tipo, rol, habilitado, idsuc);
        }
        
        public System.Threading.Tasks.Task<bool> agregarHisEmpAsync(string fechain, int Idemplead, string nombre, string apellido, float sueldo, string tipo, int rol, int habilitado, int idsuc) {
            return base.Channel.agregarHisEmpAsync(fechain, Idemplead, nombre, apellido, sueldo, tipo, rol, habilitado, idsuc);
        }
        
        public bool ActualizarHisEmp(string fechain, int Idemplead, string nombre, string apellido, int telefono, float sueldo, string direccion, string tipo, int rol, string usuarioEmpleado, string PasswordE, int habilitado) {
            return base.Channel.ActualizarHisEmp(fechain, Idemplead, nombre, apellido, telefono, sueldo, direccion, tipo, rol, usuarioEmpleado, PasswordE, habilitado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarHisEmpAsync(string fechain, int Idemplead, string nombre, string apellido, int telefono, float sueldo, string direccion, string tipo, int rol, string usuarioEmpleado, string PasswordE, int habilitado) {
            return base.Channel.ActualizarHisEmpAsync(fechain, Idemplead, nombre, apellido, telefono, sueldo, direccion, tipo, rol, usuarioEmpleado, PasswordE, habilitado);
        }
        
        public bool ActualizarHisEmpFn(string fechafn, int id) {
            return base.Channel.ActualizarHisEmpFn(fechafn, id);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarHisEmpFnAsync(string fechafn, int id) {
            return base.Channel.ActualizarHisEmpFnAsync(fechafn, id);
        }
        
        public int obtenerDeptId(string nombre) {
            return base.Channel.obtenerDeptId(nombre);
        }
        
        public System.Threading.Tasks.Task<int> obtenerDeptIdAsync(string nombre) {
            return base.Channel.obtenerDeptIdAsync(nombre);
        }
    }
}

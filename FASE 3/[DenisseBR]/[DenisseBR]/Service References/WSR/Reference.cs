//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _DenisseBR_.WSR {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSR.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logC(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logC", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logCAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logE(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logE", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logEAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logD(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logD", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logDAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logA(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/logA", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logAAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string obtenerUs(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerUs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> obtenerUsAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string obtenerEmp(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<string> obtenerEmpAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tipoEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int tipoEmp(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/tipoEmp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> tipoEmpAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Categorias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Categorias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Categorias", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> CategoriasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Sucursal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> SucursalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ObtenerSucursal(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ObtenerSucursalAsync(string direccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sucursalPedido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int sucursalPedido(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sucursalPedido", ReplyAction="*")]
        System.Threading.Tasks.Task<int> sucursalPedidoAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/direccionSucur", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string direccionSucur(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/direccionSucur", ReplyAction="*")]
        System.Threading.Tasks.Task<string> direccionSucurAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verificarUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool verificarUs(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/verificarUs", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> verificarUsAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarUS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool registrarUS(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarUS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> registrarUSAsync(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarPedido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void registrarPedido(float peso, float precio, string estado, long dpi, int idcategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registrarPedido", ReplyAction="*")]
        System.Threading.Tasks.Task registrarPedidoAsync(float peso, float precio, string estado, long dpi, int idcategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDPI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long obtenerDPI(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDPI", ReplyAction="*")]
        System.Threading.Tasks.Task<long> obtenerDPIAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosUs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerDatosUs(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosUs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosUsAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarDatos(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarDatos", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarDatosAsync(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosPed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerDatosPed(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerDatosPed", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosPedAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerCasilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet obtenerCasilla(string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/obtenerCasilla", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> obtenerCasillaAsync(string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/clientePendienteApr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet clientePendienteApr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/clientePendienteApr", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> clientePendienteAprAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEstado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarEstado(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEstado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarEstadoAsync(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rechazar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Rechazar(long dpi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rechazar", ReplyAction="*")]
        System.Threading.Tasks.Task<int> RechazarAsync(long dpi);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : _DenisseBR_.WSR.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<_DenisseBR_.WSR.Service1Soap>, _DenisseBR_.WSR.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool logC(string user, string pass) {
            return base.Channel.logC(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logCAsync(string user, string pass) {
            return base.Channel.logCAsync(user, pass);
        }
        
        public bool logE(string user, string pass) {
            return base.Channel.logE(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logEAsync(string user, string pass) {
            return base.Channel.logEAsync(user, pass);
        }
        
        public bool logD(string user, string pass) {
            return base.Channel.logD(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logDAsync(string user, string pass) {
            return base.Channel.logDAsync(user, pass);
        }
        
        public bool logA(string user, string pass) {
            return base.Channel.logA(user, pass);
        }
        
        public System.Threading.Tasks.Task<bool> logAAsync(string user, string pass) {
            return base.Channel.logAAsync(user, pass);
        }
        
        public string obtenerUs(string user) {
            return base.Channel.obtenerUs(user);
        }
        
        public System.Threading.Tasks.Task<string> obtenerUsAsync(string user) {
            return base.Channel.obtenerUsAsync(user);
        }
        
        public string obtenerEmp(string user) {
            return base.Channel.obtenerEmp(user);
        }
        
        public System.Threading.Tasks.Task<string> obtenerEmpAsync(string user) {
            return base.Channel.obtenerEmpAsync(user);
        }
        
        public int tipoEmp(string user) {
            return base.Channel.tipoEmp(user);
        }
        
        public System.Threading.Tasks.Task<int> tipoEmpAsync(string user) {
            return base.Channel.tipoEmpAsync(user);
        }
        
        public string[] Categorias() {
            return base.Channel.Categorias();
        }
        
        public System.Threading.Tasks.Task<string[]> CategoriasAsync() {
            return base.Channel.CategoriasAsync();
        }
        
        public string[] Sucursal() {
            return base.Channel.Sucursal();
        }
        
        public System.Threading.Tasks.Task<string[]> SucursalAsync() {
            return base.Channel.SucursalAsync();
        }
        
        public int ObtenerSucursal(string direccion) {
            return base.Channel.ObtenerSucursal(direccion);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerSucursalAsync(string direccion) {
            return base.Channel.ObtenerSucursalAsync(direccion);
        }
        
        public int sucursalPedido(string usuario) {
            return base.Channel.sucursalPedido(usuario);
        }
        
        public System.Threading.Tasks.Task<int> sucursalPedidoAsync(string usuario) {
            return base.Channel.sucursalPedidoAsync(usuario);
        }
        
        public string direccionSucur(int id) {
            return base.Channel.direccionSucur(id);
        }
        
        public System.Threading.Tasks.Task<string> direccionSucurAsync(int id) {
            return base.Channel.direccionSucurAsync(id);
        }
        
        public bool verificarUs(string user) {
            return base.Channel.verificarUs(user);
        }
        
        public System.Threading.Tasks.Task<bool> verificarUsAsync(string user) {
            return base.Channel.verificarUsAsync(user);
        }
        
        public bool registrarUS(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal) {
            return base.Channel.registrarUS(nombre, apellido, dpi, telefono, nit, direccion, estado, usuario, passw, IdSucursal);
        }
        
        public System.Threading.Tasks.Task<bool> registrarUSAsync(string nombre, string apellido, long dpi, int telefono, int nit, string direccion, int estado, string usuario, string passw, int IdSucursal) {
            return base.Channel.registrarUSAsync(nombre, apellido, dpi, telefono, nit, direccion, estado, usuario, passw, IdSucursal);
        }
        
        public void registrarPedido(float peso, float precio, string estado, long dpi, int idcategoria) {
            base.Channel.registrarPedido(peso, precio, estado, dpi, idcategoria);
        }
        
        public System.Threading.Tasks.Task registrarPedidoAsync(float peso, float precio, string estado, long dpi, int idcategoria) {
            return base.Channel.registrarPedidoAsync(peso, precio, estado, dpi, idcategoria);
        }
        
        public long obtenerDPI(string user) {
            return base.Channel.obtenerDPI(user);
        }
        
        public System.Threading.Tasks.Task<long> obtenerDPIAsync(string user) {
            return base.Channel.obtenerDPIAsync(user);
        }
        
        public System.Data.DataSet obtenerDatosUs(long dpi) {
            return base.Channel.obtenerDatosUs(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosUsAsync(long dpi) {
            return base.Channel.obtenerDatosUsAsync(dpi);
        }
        
        public int ActualizarDatos(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal) {
            return base.Channel.ActualizarDatos(nom, apellido, dpi, telefono, nit, direccion, usuario, passw, IdSucursal);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarDatosAsync(string nom, string apellido, long dpi, int telefono, int nit, string direccion, string usuario, string passw, int IdSucursal) {
            return base.Channel.ActualizarDatosAsync(nom, apellido, dpi, telefono, nit, direccion, usuario, passw, IdSucursal);
        }
        
        public System.Data.DataSet obtenerDatosPed(long dpi) {
            return base.Channel.obtenerDatosPed(dpi);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerDatosPedAsync(long dpi) {
            return base.Channel.obtenerDatosPedAsync(dpi);
        }
        
        public System.Data.DataSet obtenerCasilla(string Texto) {
            return base.Channel.obtenerCasilla(Texto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> obtenerCasillaAsync(string Texto) {
            return base.Channel.obtenerCasillaAsync(Texto);
        }
        
        public System.Data.DataSet clientePendienteApr() {
            return base.Channel.clientePendienteApr();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> clientePendienteAprAsync() {
            return base.Channel.clientePendienteAprAsync();
        }
        
        public int ActualizarEstado(long dpi) {
            return base.Channel.ActualizarEstado(dpi);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarEstadoAsync(long dpi) {
            return base.Channel.ActualizarEstadoAsync(dpi);
        }
        
        public int Rechazar(long dpi) {
            return base.Channel.Rechazar(dpi);
        }
        
        public System.Threading.Tasks.Task<int> RechazarAsync(long dpi) {
            return base.Channel.RechazarAsync(dpi);
        }
    }
}
